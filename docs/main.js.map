{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CdkTableExporterModule } from 'cdk-table-exporter';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less']\r\n})\r\nexport class AppComponent extends CdkTableExporterModule {\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  url = \"https://services.arcgis.com/mMUesHYPkXjaFGfS/arcgis/rest/services/mb_covid_vaccinations_daily_cumulative_02/FeatureServer/0/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Vaccination_Date%20asc&resultOffset=0&resultRecordCount=32000&resultType=standard&cacheHint=true\";\r\n  dataSource = new MatTableDataSource<VaccineData>();\r\n  displayedColumns : any[] = [\r\n    'Vaccination_Date',\r\n    'First_Doses',\r\n    'Second_Doses',\r\n    'Third_Doses',\r\n    'Total_Doses',\r\n    'Cumulative_First_Doses',\r\n    'Cumulative_Second_Doses',\r\n    'Cumulative_Third_Doses',\r\n    'Cumulative_Total_Doses',\r\n  ];\r\n    \r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    \r\n    fetch(this.url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        let records = data\r\n          .features\r\n            .map((x, ix, arr) => ({\r\n              Vaccination_Date: new Date(x.attributes.Vaccination_Date),\r\n              First_Doses: x.attributes.First_Doses || 0,\r\n              Second_Doses: x.attributes.Second_Doses || 0,\r\n              Third_Doses: x.attributes.Third_Doses || 0,\r\n              Total_Doses: x.attributes.Total_Doses || 0,\r\n              Cumulative_First_Doses: x.attributes.Cumulative_First_Doses || 0,\r\n              Cumulative_Second_Doses: x.attributes.Cumulative_Second_Doses || 0,\r\n              Cumulative_Third_Doses: x.attributes.Cumulative_Third_Doses || 0,\r\n              Cumulative_Total_Doses: x.attributes.Cumulative_Total_Doses || 0,\r\n            }));\r\n          \r\n        this.dataSource.data = records;\r\n      });\r\n  }\r\n}\r\n\r\nexport interface VaccineData {\r\n  Vaccination_Date: string;\r\n  First_Doses: number;\r\n  Second_Doses: number;\r\n  Third_Doses: number;\r\n  Total_Doses: number;\r\n  Cumulative_First_Doses: number;\r\n  Cumulative_Second_Doses: number;\r\n  Cumulative_Third_Doses: number;\r\n  Cumulative_Total_Doses: number;\r\n}","<button mat-raised-button (click)=\"exporter.exportTable('csv',{fileName:'vaccine_data'})\">CSV</button>\r\n\r\n<div class=\"example-container\">\r\n  <mat-table #table matTableExporter [dataSource]=\"dataSource\" matSort #exporter=\"matTableExporter\">\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n    <ng-container matColumnDef=\"Vaccination_Date\" sticky>\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Date </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.Vaccination_Date | date}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"First_Doses\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> First Doses </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.First_Doses}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Second_Doses\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Second Doses </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.Second_Doses}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Third_Doses\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Third Doses </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.Third_Doses}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Total_Doses\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Total </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.Total_Doses}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Cumulative_First_Doses\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Cumulative First Doses </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.Cumulative_First_Doses}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Cumulative_Second_Doses\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Cumulative Second Doses </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.Cumulative_Second_Doses}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Cumulative_Third_Doses\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Cumulative Third Doses </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.Cumulative_Third_Doses}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Cumulative_Total_Doses\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Cumulative Total Doses </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.Cumulative_Total_Doses}} </mat-cell>\r\n    </ng-container>\r\n  </mat-table>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSortModule } from '@angular/material/sort'  \r\nimport { MatTableModule } from '@angular/material/table'  \r\nimport { MatTableExporterModule } from 'mat-table-exporter';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatTableExporterModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}